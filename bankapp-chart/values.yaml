global:
  minikubeIp: "192.168.49.2"
  imagePrefix: "ghcr.io/evggene"
  pullPolicy: IfNotPresent
  tag: "0.0.14-SNAPSHOT"

ingress:
  enabled: true
  className: "nginx"

keycloak:
  service:
    port: 8101

accounts:
  service:
    port: 8010

front-ui:
  service:
    port: 8060

cash:
  service:
    port: 8030

exchange:
  service:
    port: 8040

transfer:
  service:
    port: 8090

notifications:
  service:
    port: 8070

blocker:
  service:
    port: 8020

exchange-generator:
  service:
    port: 8050

kafka:
  enabled: true

  image:
    registry: docker.io
    repository: bitnami/kafka
    tag: 4.0.0-debian-12-r10

  metrics:
    jmx:
      image:
        registry: docker.io
        repository: bitnami/jmx-exporter
        tag: 1.4.0-debian-12-r0

  fullnameOverride: kafka

  kraft:
    enabled: true

  controller:
    replicaCount: 1
    persistence:
      enabled: true
      size: 1Gi
      storageClass: ""
      accessModes:
        - ReadWriteOnce

  broker:
    replicaCount: 1
    extraEnvVars:
      - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "1"
      - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
        value: "1"
      - name: KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR
        value: "1"

    persistence:
      enabled: true
      size: 1Gi
      storageClass: ""
      accessModes:
        - ReadWriteOnce

  listeners:
    client:
      protocol: PLAINTEXT

  provisioning:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/os-shell
    kubectl:
      image:
        registry: docker.io
        repository: bitnami/kubectl
    topics:
      - name: notifications.events
        partitions: 1
        replicationFactor: 1
      - name: exchange.rates
        partitions: 1
        replicationFactor: 1
      - name: bankapp-logs
        partitions: 1
        replicationFactor: 1

logstash:
  enabled: true
  kafka:
    bootstrapServers: "kafka:9092"
    topics:
      - bankapp-logs

opensearch:
  enabled: true
  singleNode: true
  securityConfig:
    enabled: false
  extraEnvs:
    - name: DISABLE_SECURITY_PLUGIN
      value: "true"
  persistence:
    enabled: false
  resources:
    requests:
      cpu: 100m
      memory: 2Gi
    limits:
      cpu: 500m
      memory: 4Gi
  opensearchJavaOpts: "-Xms512m -Xmx512m"
  roles:
    - master
    - ingest
    - data
    - remote_cluster_client
  service:
    type: ClusterIP
  sysctl:
    enabled: false
  config:
    opensearch.yml: |
      cluster.name: bankapp
      discovery.type: single-node
      network.host: 0.0.0.0
      action.auto_create_index: "*"
      # Watermarks – поднять пороги для стенда (чтобы не блокировало при 90%)
      cluster.routing.allocation.disk.threshold_enabled: true
      cluster.routing.allocation.disk.watermark.low: "95%"
      cluster.routing.allocation.disk.watermark.high: "97%"
      cluster.routing.allocation.disk.watermark.flood_stage: "98%"

opensearch-dashboards:
  enabled: true
  opensearchHosts: "http://opensearch-cluster-master:9200"
  service:
    type: ClusterIP
    port: 5601
  ingress:
    enabled: false
  extraVolumes:
    - name: osd-over-conf
      configMap:
        name: bankapp-osd-config
  extraVolumeMounts:
    - name: osd-over-conf
      mountPath: /usr/share/opensearch-dashboards/config/opensearch_dashboards.yml
      subPath: opensearch_dashboards.yml
      readOnly: true
