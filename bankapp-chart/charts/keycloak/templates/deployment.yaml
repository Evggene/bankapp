apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres:12.5
          command: ["sh","-c"]
          args:
            - >
              until pg_isready -h {{ default (printf "%s-postgres" .Release.Name) .Values.db.host }} -p {{ .Values.db.port }};
              do echo "waiting for database"; sleep 2; done
      containers:
        - name: keycloak
          image: {{ .Values.image | quote }}
          # для локалки удобно "start-dev"; в проде используйте "start"
          args: ["start-dev"]
          env:
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_PROXY_HEADERS
              value: "xforwarded"
            - name: KC_HOSTNAME
              value: "http://{{ .Release.Name }}.{{ .Values.global.minikubeIp }}.nip.io/keycloak"
            - name: KC_HTTP_RELATIVE_PATH
              value: "/keycloak"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HOSTNAME_STRICT_HTTPS
              value: "false"
          envFrom:
            - secretRef:
                name: {{ include "keycloak.fullname" . }}-secret
          ports:
              - name: http
                containerPort: 8080
          readinessProbe:
            httpGet:
              path: /keycloak/
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
