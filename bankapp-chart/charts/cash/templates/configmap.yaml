apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-config
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  application.yml: |-
    server:
      port: {{ .Values.service.port }}

    management:
      endpoints:
        web:
          exposure:
            include: "*"
      tracing:
        sampling:
          probability: 1.0
      zipkin:
        tracing:
          endpoint: http://{{ .Release.Name }}-zipkin:9411/api/v2/spans

    logging:
      level:
        org.springframework.web: INFO

    spring:
      datasource:
        url: jdbc:postgresql://{{ .Release.Name }}-postgres:{{ .Values.database.port }}/{{ .Values.database.name }}
        username: {{ .Values.database.username | quote }}
        password: {{ .Values.database.password | quote }}
    
      kafka:
        bootstrap-servers: http://kafka:9092
        producer:
          key-serializer: org.apache.kafka.common.serialization.StringSerializer
          value-serializer: org.apache.kafka.common.serialization.StringSerializer
          acks: all
          retries: 3
          enable-idempotence: true
          max-in-flight-requests-per-connection: 5

    keycloak:
      url: http://{{ .Release.Name }}-keycloak:{{ .Values.keycloak.port }}{{ .Values.keycloak.relativePath }}

    blocker:
      url: http://{{ .Release.Name }}-blocker:{{ .Values.blocker.port }}/blocker

    shared:
      gateway-base-url: http://{{ .Release.Name }}.{{ .Values.global.minikubeIp }}.nip.io
