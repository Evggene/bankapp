server:
  port: 80490
management:
  endpoints:
    web:
      exposure:
        include: health,info,env,refresh
logging:
  level:
    org.springframework.web: INFO

spring:
  datasource:
    url: jdbc:postgresql://localhost:5431/bankapp
    username: user
    password: pass
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    consumer:
      group-id: notifications
      enable-auto-commit: false         # ручной коммит
      auto-offset-reset: earliest
      listener:
        ack-mode: MANUAL_IMMEDIATE         # режим ручного подтверждения
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

  topics:
    notifications:
      topic: "notifications.events"

resilience4j:
  retry:
    instances:
      default:
        max-attempts: 3                # 1 основной + 2 повтора
        wait-duration: 200ms
        retry-exceptions:
          - org.springframework.web.client.ResourceAccessException
          - org.springframework.web.client.HttpServerErrorException
        ignore-exceptions:
          - org.springframework.web.client.HttpClientErrorException$BadRequest

  circuitbreaker:
    instances:
      default:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        permitted-number-of-calls-in-half-open-state: 3
        record-exceptions:
          - org.springframework.web.client.HttpServerErrorException
          - org.springframework.web.client.ResourceAccessException

  timelimiter:
    instances:
      default:
        timeout-duration: 2s

keycloak:
  url: http://localhost:8101
