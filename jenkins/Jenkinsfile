pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = credentials('DOCKER_REGISTRY')
        DB_PASSWORD     = credentials('DB_PASSWORD')
        GITHUB_USERNAME = credentials('GITHUB_USERNAME')
        DB_NAME         = 'mydb'
        DB_USER         = 'myuser'
        IMAGE_TAG       = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Build & Unit Tests') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Images') {
            steps {
                sh """
                docker build -t ghcr.io/bankapp/accounts:${IMAGE_TAG} accounts
                docker build -t ghcr.io/bankapp/blocker:${IMAGE_TAG} blocker
                docker build -t ghcr.io/bankapp/cash:${IMAGE_TAG} cash
                docker build -t ghcr.io/bankapp/exchange:${IMAGE_TAG} exchange
                docker build -t ghcr.io/bankapp/exchange-generator:${IMAGE_TAG} exchange-generator
                docker build -t ghcr.io/bankapp/front-ui:${IMAGE_TAG} front-ui
                docker build -t ghcr.io/bankapp/notifications:${IMAGE_TAG} notifications
                docker build -t ghcr.io/bankapp/transfer:${IMAGE_TAG} transfer
                """
            }
        }

        stage('Push Docker Images') {
            steps {
                withCredentials([string(credentialsId: 'GHCR_TOKEN', variable: 'GHCR_TOKEN')]) {
                    sh """
                    echo \$GHCR_TOKEN | docker login ghcr.io -u ${GITHUB_USERNAME} --password-stdin
                    docker push  ghcr.io/bankapp/accounts:${IMAGE_TAG}
                    docker push  ghcr.io/bankapp/blocker:${IMAGE_TAG}
                    docker push  ghcr.io/bankapp/cash:${IMAGE_TAG}
                    docker push  ghcr.io/bankapp/exchange:${IMAGE_TAG}
                    docker push ghcr.io/bankapp/exchange-generator:${IMAGE_TAG}
                    docker push  ghcr.io/bankapp/front-ui:${IMAGE_TAG}
                    docker push  ghcr.io/bankapp/notifications:${IMAGE_TAG}
                    docker push  ghcr.io/bankapp/transfer:${IMAGE_TAG}
                    """
                }
            }
        }

        stage('Helm Deploy to TEST') {
            steps {
                sh """
                helm upgrade --install customer-service my-microservices-app/charts/customer-service \\
                  --namespace test --create-namespace \\
                  --set image.repository=${DOCKER_REGISTRY}/customer-service \\
                  --set image.tag=${IMAGE_TAG} \\
                  --set ingress.enabled=true \\
                  --set ingress.hosts[0].host=customer.test.local \\
                  --set ingress.hosts[0].paths[0].path="/" \\
                  --set ingress.hosts[0].paths[0].pathType="ImplementationSpecific"

                helm upgrade --install order-service my-microservices-app/charts/order-service \\
                  --namespace test --create-namespace \\
                  --set image.repository=${DOCKER_REGISTRY}/order-service \\
                  --set image.tag=${IMAGE_TAG} \\
                  --set ingress.enabled=true \\
                  --set ingress.hosts[0].host=order.test.local \\
                  --set ingress.hosts[0].paths[0].path="/" \\
                  --set ingress.hosts[0].paths[0].pathType="ImplementationSpecific"
                """
            }
        }
    }
}
